// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: songs.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Song struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album       string `protobuf:"bytes,1,opt,name=Album,proto3" json:"Album,omitempty"`
	AlbumArtist string `protobuf:"bytes,2,opt,name=AlbumArtist,proto3" json:"AlbumArtist,omitempty"`
	Artist      string `protobuf:"bytes,3,opt,name=Artist,proto3" json:"Artist,omitempty"`
	Comment     string `protobuf:"bytes,4,opt,name=Comment,proto3" json:"Comment,omitempty"`
	Composer    string `protobuf:"bytes,5,opt,name=Composer,proto3" json:"Composer,omitempty"`
	FileType    string `protobuf:"bytes,6,opt,name=FileType,proto3" json:"FileType,omitempty"`
	Format      string `protobuf:"bytes,7,opt,name=Format,proto3" json:"Format,omitempty"`
	Genre       string `protobuf:"bytes,8,opt,name=Genre,proto3" json:"Genre,omitempty"`
	Id          string `protobuf:"bytes,9,opt,name=Id,proto3" json:"Id,omitempty"`
	Lyrics      string `protobuf:"bytes,10,opt,name=Lyrics,proto3" json:"Lyrics,omitempty"`
	RawSong     string `protobuf:"bytes,11,opt,name=RawSong,proto3" json:"RawSong,omitempty"`
	Title       string `protobuf:"bytes,12,opt,name=Title,proto3" json:"Title,omitempty"`
	Year        int32  `protobuf:"varint,13,opt,name=Year,proto3" json:"Year,omitempty"`
}

func (x *Song) Reset() {
	*x = Song{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{0}
}

func (x *Song) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *Song) GetAlbumArtist() string {
	if x != nil {
		return x.AlbumArtist
	}
	return ""
}

func (x *Song) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *Song) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Song) GetComposer() string {
	if x != nil {
		return x.Composer
	}
	return ""
}

func (x *Song) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *Song) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Song) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *Song) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Song) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *Song) GetRawSong() string {
	if x != nil {
		return x.RawSong
	}
	return ""
}

func (x *Song) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Song) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type CreateSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawSong string `protobuf:"bytes,1,opt,name=RawSong,proto3" json:"RawSong,omitempty"`
}

func (x *CreateSongRequest) Reset() {
	*x = CreateSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSongRequest) ProtoMessage() {}

func (x *CreateSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSongRequest.ProtoReflect.Descriptor instead.
func (*CreateSongRequest) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSongRequest) GetRawSong() string {
	if x != nil {
		return x.RawSong
	}
	return ""
}

type UpdateSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album       *string `protobuf:"bytes,1,opt,name=Album,proto3,oneof" json:"Album,omitempty"`
	AlbumArtist *string `protobuf:"bytes,2,opt,name=AlbumArtist,proto3,oneof" json:"AlbumArtist,omitempty"`
	Artist      *string `protobuf:"bytes,3,opt,name=Artist,proto3,oneof" json:"Artist,omitempty"`
	Comment     *string `protobuf:"bytes,4,opt,name=Comment,proto3,oneof" json:"Comment,omitempty"`
	Composer    *string `protobuf:"bytes,5,opt,name=Composer,proto3,oneof" json:"Composer,omitempty"`
	FileType    *string `protobuf:"bytes,6,opt,name=FileType,proto3,oneof" json:"FileType,omitempty"`
	Format      *string `protobuf:"bytes,7,opt,name=Format,proto3,oneof" json:"Format,omitempty"`
	Genre       *string `protobuf:"bytes,8,opt,name=Genre,proto3,oneof" json:"Genre,omitempty"`
	Id          string  `protobuf:"bytes,9,opt,name=Id,proto3" json:"Id,omitempty"`
	Lyrics      *string `protobuf:"bytes,10,opt,name=Lyrics,proto3,oneof" json:"Lyrics,omitempty"`
	Title       *string `protobuf:"bytes,11,opt,name=Title,proto3,oneof" json:"Title,omitempty"`
	Year        *int32  `protobuf:"varint,12,opt,name=Year,proto3,oneof" json:"Year,omitempty"`
}

func (x *UpdateSongRequest) Reset() {
	*x = UpdateSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSongRequest) ProtoMessage() {}

func (x *UpdateSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSongRequest.ProtoReflect.Descriptor instead.
func (*UpdateSongRequest) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSongRequest) GetAlbum() string {
	if x != nil && x.Album != nil {
		return *x.Album
	}
	return ""
}

func (x *UpdateSongRequest) GetAlbumArtist() string {
	if x != nil && x.AlbumArtist != nil {
		return *x.AlbumArtist
	}
	return ""
}

func (x *UpdateSongRequest) GetArtist() string {
	if x != nil && x.Artist != nil {
		return *x.Artist
	}
	return ""
}

func (x *UpdateSongRequest) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *UpdateSongRequest) GetComposer() string {
	if x != nil && x.Composer != nil {
		return *x.Composer
	}
	return ""
}

func (x *UpdateSongRequest) GetFileType() string {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return ""
}

func (x *UpdateSongRequest) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *UpdateSongRequest) GetGenre() string {
	if x != nil && x.Genre != nil {
		return *x.Genre
	}
	return ""
}

func (x *UpdateSongRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSongRequest) GetLyrics() string {
	if x != nil && x.Lyrics != nil {
		return *x.Lyrics
	}
	return ""
}

func (x *UpdateSongRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateSongRequest) GetYear() int32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

type SongIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *SongIdRequest) Reset() {
	*x = SongIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SongIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongIdRequest) ProtoMessage() {}

func (x *SongIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongIdRequest.ProtoReflect.Descriptor instead.
func (*SongIdRequest) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{3}
}

func (x *SongIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{4}
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{5}
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_songs_proto protoreflect.FileDescriptor

var file_songs_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73,
	0x6f, 0x6e, 0x67, 0x22, 0xc2, 0x02, 0x0a, 0x04, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x4c, 0x79, 0x72, 0x69, 0x63, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x79,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x61, 0x77, 0x53, 0x6f, 0x6e, 0x67, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x61, 0x77, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x59, 0x65, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x59, 0x65, 0x61, 0x72, 0x22, 0x2d, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x52, 0x61, 0x77, 0x53, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x52, 0x61, 0x77, 0x53, 0x6f, 0x6e, 0x67, 0x22, 0xea, 0x03, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x05, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0b, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x06, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x05, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x4c, 0x79, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x06, 0x4c, 0x79, 0x72, 0x69, 0x63, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x59, 0x65, 0x61, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0a, 0x52, 0x04, 0x59,
	0x65, 0x61, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4c, 0x79, 0x72, 0x69, 0x63,
	0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x59, 0x65, 0x61, 0x72, 0x22, 0x1f, 0x0a, 0x0d, 0x53, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x24, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0x95, 0x02, 0x0a, 0x0b, 0x53, 0x6f, 0x6e, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x6f, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e,
	0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x17, 0x2e,
	0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53,
	0x6f, 0x6e, 0x67, 0x42, 0x79, 0x49, 0x64, 0x12, 0x13, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53,
	0x6f, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x73,
	0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x0d, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x6f, 0x6e,
	0x67, 0x22, 0x00, 0x30, 0x01, 0x12, 0x37, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x6f, 0x6e, 0x67, 0x42, 0x79, 0x49, 0x64, 0x12, 0x13, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x53,
	0x6f, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x73,
	0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x34,
	0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x63, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x2d, 0x61, 0x72, 0x74, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x73, 0x72, 0x63,
	0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_songs_proto_rawDescOnce sync.Once
	file_songs_proto_rawDescData = file_songs_proto_rawDesc
)

func file_songs_proto_rawDescGZIP() []byte {
	file_songs_proto_rawDescOnce.Do(func() {
		file_songs_proto_rawDescData = protoimpl.X.CompressGZIP(file_songs_proto_rawDescData)
	})
	return file_songs_proto_rawDescData
}

var file_songs_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_songs_proto_goTypes = []interface{}{
	(*Song)(nil),              // 0: song.Song
	(*CreateSongRequest)(nil), // 1: song.CreateSongRequest
	(*UpdateSongRequest)(nil), // 2: song.UpdateSongRequest
	(*SongIdRequest)(nil),     // 3: song.SongIdRequest
	(*Request)(nil),           // 4: song.Request
	(*Response)(nil),          // 5: song.Response
}
var file_songs_proto_depIdxs = []int32{
	1, // 0: song.SongService.CreateSong:input_type -> song.CreateSongRequest
	2, // 1: song.SongService.UpdateSong:input_type -> song.UpdateSongRequest
	3, // 2: song.SongService.GetSongById:input_type -> song.SongIdRequest
	4, // 3: song.SongService.GetSongs:input_type -> song.Request
	3, // 4: song.SongService.RemoveSongById:input_type -> song.SongIdRequest
	5, // 5: song.SongService.CreateSong:output_type -> song.Response
	5, // 6: song.SongService.UpdateSong:output_type -> song.Response
	0, // 7: song.SongService.GetSongById:output_type -> song.Song
	0, // 8: song.SongService.GetSongs:output_type -> song.Song
	5, // 9: song.SongService.RemoveSongById:output_type -> song.Response
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_songs_proto_init() }
func file_songs_proto_init() {
	if File_songs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_songs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Song); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SongIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_songs_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_songs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_songs_proto_goTypes,
		DependencyIndexes: file_songs_proto_depIdxs,
		MessageInfos:      file_songs_proto_msgTypes,
	}.Build()
	File_songs_proto = out.File
	file_songs_proto_rawDesc = nil
	file_songs_proto_goTypes = nil
	file_songs_proto_depIdxs = nil
}
